[{"type":"com.github.javaparser.ast.PackageDeclaration", "child":[{"type":"com.github.javaparser.ast.expr.Name", "data":"thesis.vault", "child":[{"type":"com.github.javaparser.ast.expr.Name", "data":"thesis", "child":[]}]}]}, {"type":"com.github.javaparser.ast.ImportDeclaration", "child":[{"type":"com.github.javaparser.ast.expr.Name", "data":"com.fasterxml.jackson.databind.ObjectMapper", "child":[{"type":"com.github.javaparser.ast.expr.Name", "data":"com.fasterxml.jackson.databind", "child":[{"type":"com.github.javaparser.ast.expr.Name", "data":"com.fasterxml.jackson", "child":[{"type":"com.github.javaparser.ast.expr.Name", "data":"com.fasterxml", "child":[{"type":"com.github.javaparser.ast.expr.Name", "data":"com", "child":[]}]}]}]}]}]}, {"type":"com.github.javaparser.ast.ImportDeclaration", "child":[{"type":"com.github.javaparser.ast.expr.Name", "data":"java.io.IOException", "child":[{"type":"com.github.javaparser.ast.expr.Name", "data":"java.io", "child":[{"type":"com.github.javaparser.ast.expr.Name", "data":"java", "child":[]}]}]}]}, {"type":"com.github.javaparser.ast.body.ClassOrInterfaceDeclaration", "child":[{"type":"com.github.javaparser.ast.Modifier", "data":"public "}, {"type":"com.github.javaparser.ast.expr.SimpleName", "data":"Validation"}, {"type":"com.github.javaparser.ast.body.ConstructorDeclaration", "child":[{"type":"com.github.javaparser.ast.Modifier", "data":"private "}, {"type":"com.github.javaparser.ast.expr.SimpleName", "data":"Validation"}, {"type":"com.github.javaparser.ast.stmt.BlockStmt", "data":"{\r\n}", "child":[]}]}, {"type":"com.github.javaparser.ast.body.MethodDeclaration", "child":[{"type":"com.github.javaparser.ast.Modifier", "data":"public "}, {"type":"com.github.javaparser.ast.Modifier", "data":"static "}, {"type":"com.github.javaparser.ast.expr.SimpleName", "data":"isStringValidJson"}, {"type":"com.github.javaparser.ast.body.Parameter", "child":[{"type":"com.github.javaparser.ast.type.ClassOrInterfaceType", "child":[{"type":"com.github.javaparser.ast.expr.SimpleName", "data":"String"}]}, {"type":"com.github.javaparser.ast.expr.SimpleName", "data":"str"}]}, {"type":"com.github.javaparser.ast.type.PrimitiveType", "data":"boolean", "child":[]}, {"type":"com.github.javaparser.ast.stmt.BlockStmt", "data":"{\r\n    try {\r\n        final ObjectMapper mapper = new ObjectMapper();\r\n        mapper.readTree(str);\r\n        return true;\r\n    } catch (IOException e) {\r\n        return false;\r\n    }\r\n}", "child":[{"type":"com.github.javaparser.ast.stmt.TryStmt", "child":[{"type":"com.github.javaparser.ast.stmt.BlockStmt", "data":"{\r\n    final ObjectMapper mapper = new ObjectMapper();\r\n    mapper.readTree(str);\r\n    return true;\r\n}", "child":[{"type":"com.github.javaparser.ast.stmt.ExpressionStmt", "child":[{"type":"com.github.javaparser.ast.expr.VariableDeclarationExpr", "child":[{"type":"com.github.javaparser.ast.Modifier", "data":"final "}, {"type":"com.github.javaparser.ast.body.VariableDeclarator", "child":[{"type":"com.github.javaparser.ast.type.ClassOrInterfaceType", "child":[{"type":"com.github.javaparser.ast.expr.SimpleName", "data":"ObjectMapper"}]}, {"type":"com.github.javaparser.ast.expr.SimpleName", "data":"mapper"}, {"type":"com.github.javaparser.ast.expr.ObjectCreationExpr", "child":[{"type":"com.github.javaparser.ast.type.ClassOrInterfaceType", "child":[{"type":"com.github.javaparser.ast.expr.SimpleName", "data":"ObjectMapper"}]}]}]}]}]}, {"type":"com.github.javaparser.ast.stmt.ExpressionStmt", "child":[{"type":"com.github.javaparser.ast.expr.MethodCallExpr", "child":[{"type":"com.github.javaparser.ast.expr.NameExpr", "child":[{"type":"com.github.javaparser.ast.expr.SimpleName", "data":"mapper"}]}, {"type":"com.github.javaparser.ast.expr.SimpleName", "data":"readTree"}, {"type":"com.github.javaparser.ast.expr.NameExpr", "child":[{"type":"com.github.javaparser.ast.expr.SimpleName", "data":"str"}]}]}]}, {"type":"com.github.javaparser.ast.stmt.ReturnStmt", "data":"return true;", "child":[{"type":"com.github.javaparser.ast.expr.BooleanLiteralExpr", "data":"true", "child":[]}]}]}, {"type":"com.github.javaparser.ast.stmt.CatchClause", "child":[{"type":"com.github.javaparser.ast.body.Parameter", "child":[{"type":"com.github.javaparser.ast.type.ClassOrInterfaceType", "child":[{"type":"com.github.javaparser.ast.expr.SimpleName", "data":"IOException"}]}, {"type":"com.github.javaparser.ast.expr.SimpleName", "data":"e"}]}, {"type":"com.github.javaparser.ast.stmt.BlockStmt", "data":"{\r\n    return false;\r\n}", "child":[{"type":"com.github.javaparser.ast.stmt.ReturnStmt", "data":"return false;", "child":[{"type":"com.github.javaparser.ast.expr.BooleanLiteralExpr", "data":"false", "child":[]}]}]}]}]}]}]}, {"type":"com.github.javaparser.ast.comments.JavadocComment", "data":"/**\r\n * Find given string is a valid json or not.\r\n * The str argument must specify a json string\r\n * <p>\r\n * This method returns true if the given string is a valid json\r\n * else return false\r\n *\r\n * @param  str  a json string\r\n * @return      true/false\r\n */\r\n"}]}]